/**
\page files_page Directories and Files in the QP/C++ Distribution

The following annotated directory tree lists the most important directories
and files provided in the standard QP/C++ distribution.

\code
qpcpp\               - QP/C++ root directory
  |
  +-qpcpp.chm        - "QP/C++ Reference Manual" in CHM Help format
  |
  +-doxygen\         - QP documentation generated with Doxygen
  | +-html\          - "QP/C++ Reference Manual" in HTML format
  | | +-index.html   - The HTML index page for the "QP/C Reference Manual"
  | | +- . . .
  | +-Doxyfile       - Doxygen configuration file to generate the Manual
  | +- . . .
  |
  +-examples\        - QP examples
  | | +-posix\       - Examples for POSIX (Linux, BSD, etc.)
  | | | +-gnu\       - Examples with the GNU compiler
  | | | | +-dpp\     - Dining Philosopher Problem (DPP) example for Linux
  | | | | | +-dbg\   - Debug build
  | | | | | +-rel\     - Release build
  | | | | | +-spy\     - Spy build (with software instrumentation)
  | | | | | +-dpp.qm   - QM model file for this project
  | | | | | +-Makefile - GNU Makefile to build the DPP application
  | | | | | +-. . .
  | | |
  | | +-win32\       - Examples for Win32 (Windows)
  | | | +-mingw\     - Examples for the MinGW (GNU) compiler
  | | | | +-dpp\     - Dining Philosopher Problem (DPP) example for Linux
  | | | | | +-dbg\   - Debug build
  | | | | | | +-dpp.exe - DPP executable (Debug configuration)
  | | | | | +-rel\      - Release build
  | | | | | +-spy\      - Spy build (with software tracing)
  | | | | | +-dpp.qm    - QM model file for this project
  | | | | | +-Makefile  - GNU Makefile to build the DPP application
  | | | | | +-. . .
  | | | | +-game-gui\   - "Fly 'n' Shoot" game example (GUI)
  | | | |
  | | | +-vc\        - Examples for the Visual C++ compiler
  | | | | +-dpp\     - Dining Philosopher Problem (DPP) example (console)
  | | | | | +-Debug\    - Debug build
  | | | | | | +-dpp.exe - DPP executable (Debug configuration)
  | | | | | +-Release\  - Release build
  | | | | | +-Spy\      - Spy build (with software instrumentation)
  | | | | | +-dpp.qm    - QM model file for this project
  | | | | | +-dpp.sln     - Visual Studio solution file
  | | | | | +-dpp.vcxproj - Visual Studio project file
  | | | | | +-. . .
  | | | | +-dpp-gui\    - Dining Philosopher Problem (DPP) example (GUI)
  | | | | +-game-gui\   - "Fly 'n' Shoot" game example (GUI)
  | |
  | +-80x86\         - Examples for the 80x86 processor
  | | +-dos\         - Examples for DOS with the "vanilla" cooperative kernel
  | | | +-watcom\    - Examples with the Open Watcom compiler
  | | | | +-l\       - Examples using the Large memory model
  | | | | | +-bomb\  - Time bomb examples (Chapter 3 of PSiCC2)
  | | | | | +-dpp\   - Dining Philosopher Problem (DPP) example for DOS
  | | | | | +-game\    - "Fly 'n' Shoot" game example
  | | | | | +-calc\    - Calculator example
  | | | | | +-qhsmtst\ - QHsmTst example (PSiCC2  in Chapter 2)
  | | | | | +-comp\    - "Orthogonal Component" pattern (PSiCC2 Chapter 5)
  | | | | | +-defer\   - "Deferred Event" pattern (PSiCC2 Chapter 5)
  | | | | | +-history\ - "Transition to History" pattern (PSiCC2 Chapter 5)
  | | | | | +-hook\    - "Ultimate Hook" pattern (Chapter 5)
  | | | | | +-reminder\ - "Reminder" pattern (PSiCC2 Chapter 5)
  | | |
  | | +-qk\          - Examples for the QK preemptive kernel
  | | +-ucos2\       - Examples for the µC/OS-II RTOS
  | |
  | +-arm-cortex\    - Examples for ARM Cortex processor
  | | +-vanilla\     - Examples for the cooperative "vanilla" kernel
  | | | +-iar\       - Examples with the IAR compiler
  | | | | +-dpp-ev-lm3s811\  - DPP example for for EV-LM3S811 board
  | | | | +-game-ev-lm3s811\ - "Fly 'n' Shoot" example for EV-LM3S811 board
  | | | | +-. . .    - Other examples for ARM Cortex
  | | | +-gnu\       - Examples with the GNU compiler (Code Sourcery G++)
  | | | | +-dpp-ev-lm3s811\  - DPP example for for EV-LM3S811 board
  | | | | +-game-ev-lm3s811\ - "Fly 'n' Shoot" example for EV-LM3S811 board
  | | | | +-. . .    - Other examples for ARM Cortex
  | | |
  | | +-qk\          - Examples for the preemptive QK kernel
  | | | +-iar\       - Examples with the IAR compiler
  | | | | +-dpp-qk-ev-lm3s811\  - DPP example for for EV-LM3S811 board
  | | | | +-game-qk-ev-lm3s811\ - "Fly 'n' Shoot" example for EV-LM3S811 board
  | | | | +-. . .    - Other examples for ARM Cortex
  | | | +-gnu\       - Examples with the GNU compiler (Code Sourcery G++)
  | | | | +-dpp-qk-ev-lm3s811\  - DPP example for for EV-LM3S811 board
  | | | | +-game-qk-ev-lm3s811\ - "Fly 'n' Shoot" example for EV-LM3S811 board
  | | | | +-. . .    - Other examples for ARM Cortex
  | |
  | +-. . .          - Examples for other CPUs and compiler
  |
  +-ports\           - Platform-specific QP ports
  | +-posix\         - Ports to the POSIX operating systems (Linux, BSD, etc.)
  | | +-gnu\         - Ports with the GNU compiler
  | | | +-Makefile   - make file to build the QP libraries
  | | | +-. . .
  | |
  | +-win32\         - Ports to the POSIX operating systems (Linux, BSD, etc.)
  | | +-mingw\       - Port with the MinGW (GNU) compiler
  | | | +-qp.sln     - Visual Studio solution to build the QP libraries
  | | | +-. . .
  | | |
  | | +-vc\          - Port with the Visual C++ compiler
  | |
  | +-80x86\         - Ports to the 80x86 processor
  | | +-dos\         - Ports to DOS with the "vanilla" cooperative kernel
  | | | +-watcom\    - Ports with the Open Watcom compiler
  | | | | +-l\       - Ports for the Large memory model
  | | | | | +-dbg\   - Debug build
  | | | | | | +-qp.lib - QP  library
  | | | | | +-rel\   - Release build
  | | | | | +-spy\   - Spy build (with software instrumentation)
  | | | | | | +-qp.lib - QP library
  | | | | | |
  | | | | | +-make.bat   - batch script for building the QP libraries
  | | | | | +-qep_port.h - QEP platform-dependent include file
  | | | | | +-qf_port.h  - QF  platform-dependent include file
  | | | | | +-qs_port.h  - QS  platform-dependent include file
  | | |
  | | +-qk\          - Ports to the QK preemptive kernel
  | | | +-. . .
  | | |
  | | +-ucos2\       - Ports to the MicroC/OS-II RTOS
  | | | +-watcom\    - Ports with the Open Watcom compiler
  | | | | +-l\       - Ports using the Large memory model
  | | | | | +-ucos2.86\  - MicroC/OS-II v2.86 object code and header files
  | | | | | +-src\       - Port-specific source files
  | | | | | | +-qf_port.c - QF port to µC/OS-II source file
  | | | | | +-. . .
  | | |
  | |
  | +-arm-cortex\    - Ports to the ARM Cortex processor
  | | +-vanilla\     - Ports to the cooperative "vanilla" kernel
  | | | +-iar\       - Ports with the IAR compiler
  | | | | | +-dbg\   - Debug build
  | | | | | +-rel\   - Release build
  | | | | | +-spy\   - Spy build (with software instrumentation)
  | | | | | +-make_cortex-m3.bat - batch script for building QP libraries
  | | | | | +-qep_port.h - QEP platform-dependent include file
  | | | | | +-qf_port.h  - QF  platform-dependent include file
  | | | | | +-qs_port.h  - QS  platform-dependent include file
  | | | . . .
  | | | +-gnu\       - Ports with the GNU compiler (Code Sourcery G++)
  | | | | | +-dbg\   - Debug build
  | | | | | +-rel\   - Release build
  | | | | | +-spy\   - Spy build (with software instrumentation)
  | | | | | +-make_cortex-m3_cs.bat - batch script for building QP libraries
  | | | | | +-qep_port.h - QEP platform-dependent include file
  | | | | | +-qf_port.h  - QF  platform-dependent include file
  | | | | | +-qs_port.h  - QS  platform-dependent include file
  | | | . . .
  | | +-qk\          - Ports to the preemptive QK kernel
  | |   +-iar\       - Ports with the IAR compiler
  | |   +-gnu\       - Ports with the GNU compiler (Code Sourcery G++)
  | +-. . .          - Ports to other CPUs
  |
  +-include\         - QP platform-independent header files
  | +-qassert.h      - QP assertions
  | +-qevt.h         - QEvt declaration
  | +-qep.h          - QEP platform-independent interface
  | +-qf.h           - QF platform-independent interface
  | +-qk.h           - QK platform-independent interface
  | +-qs.h           - QS platform-independent active interface
  | +-qs_dummy.h     - QS platform-independent inactive interface
  | +-qequeue.h      - QF native event queue facility
  | +-qmpool.h       - QF native memory pool facility
  | +-qpset.h        - QF native priority set facility
  | +-qvanilla.h     - QF native "vanilla" cooperative kernel interface
  | +-qp_port.h      - QP port include file
  |
  +-qep\             - QEP hierarchical event processor
  | +-source\        - QEP platform-independent source code (*.cpp files)
  | | +- . . .
  |
  +-qf\              - QF real-time framework
  | +-source\        - QF platform-independent source code (*.cpp files)
  | | +- . . .
  |
  +-qk\              - QK preemptive kernel
  | +-source\        - QK platform-independent source code (*.cpp files)
  | | +- . . .
  |
  +-qs\              - QS software tracing (target component)
  | +-source\        - QS platform-independent source code (*.cpp files)
  | | +- . . .
\endcode

\image html logo_ql_TM.jpg
Copyright &copy; 2002-2012 Quantum Leaps, LLC. All Rights Reserved.
*/