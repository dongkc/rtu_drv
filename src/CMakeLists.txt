
INCLUDE_DIRECTORIES(../library/dbus/include/)
INCLUDE_DIRECTORIES(../library/modbus/)
INCLUDE_DIRECTORIES(../library/qpcpp/include/)
INCLUDE_DIRECTORIES(../library/qpcpp/ports/posix/gnu)
INCLUDE_DIRECTORIES(../web/)

AUX_SOURCE_DIRECTORY(. RTU_SRC)

ADD_EXECUTABLE(rtu ${RTU_SRC})

LINK_DIRECTORIES(${PROJECT_BINARY_DIR}/lib)

FIND_LIBRARY(POCO_UTIL_LIBRARY NAMES libPocoUtil.a PATHS ${CMAKE_FIND_ROOT_PATH})
IF (POCO_UTIL_LIBRARY) 
    TARGET_LINK_LIBRARIES(rtu ${POCO_UTIL_LIBRARY})
ENDIF(POCO_UTIL_LIBRARY)

FIND_LIBRARY(POCO_XML_LIBRARY NAMES libPocoXML.a PATHS ${CMAKE_FIND_ROOT_PATH})
IF (POCO_XML_LIBRARY) 
    TARGET_LINK_LIBRARIES(rtu ${POCO_XML_LIBRARY})
ENDIF(POCO_XML_LIBRARY)

FIND_LIBRARY(POCO_NET_LIBRARY NAMES libPocoNet.a PATHS ${CMAKE_FIND_ROOT_PATH})
IF (POCO_NET_LIBRARY) 
    TARGET_LINK_LIBRARIES(rtu ${POCO_NET_LIBRARY})
ENDIF(POCO_NET_LIBRARY)

FIND_LIBRARY(POCO_FOUNDATION_LIBRARY NAMES libPocoFoundation.a PATHS ${CMAKE_FIND_ROOT_PATH})
IF (POCO_FOUNDATION_LIBRARY) 
    TARGET_LINK_LIBRARIES(rtu ${POCO_FOUNDATION_LIBRARY})
ENDIF(POCO_FOUNDATION_LIBRARY)

FIND_LIBRARY(PCRE_LIBRARY NAMES libpcre.a PATHS ${CMAKE_FIND_ROOT_PATH})
IF (PCRE_LIBRARY) 
    TARGET_LINK_LIBRARIES(rtu ${PCRE_LIBRARY})
ENDIF(PCRE_LIBRARY)

TARGET_LINK_LIBRARIES(rtu qpport qf qep qs modbus pthread netconfig web)
