//////////////////////////////////////////////////////////////////////////////
// Model: rtu.qm
// File:  ./modbus-mgr.h
//
// This code has been generated by QM tool (see state-machine.com/qm).
// DO NOT EDIT THIS FILE MANUALLY. All your changes will be lost.
//
// This program is open source software: you can redistribute it and/or
// modify it under the terms of the GNU General Public License as published
// by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
// or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
// for more details.
//////////////////////////////////////////////////////////////////////////////
// @(/2/2) ...................................................................
#ifndef MODBUS_MGR_H
#define MODBUS_MGR_H

#include "app.h"
#include "qp_port.h"
#include "bsp.h"
#include "modbus.h"
#include "dpp.h"

namespace Zebra {


// @(/1/0) ...................................................................
class ModbusMgr : public QP::QActive {
private:
    modbus_t* ctx;
    QP::QTimeEvt _timeEvt;
    uint8_t _tab_bits[8];
    uint16_t _table_registers[10];

public:
    ModbusMgr(
        const char* port,
        int32_t baud,
        char parity,
        int32_t data_bit,
        int32_t stop_bit);

protected:
    static QP::QState initial(ModbusMgr * const me, QP::QEvt const * const e);
    static QP::QState running(ModbusMgr * const me, QP::QEvt const * const e);
};



} // namespace Zebra

#endif  // MODBUS_MGR_H
